export class FuseUtils {
    /**
     * Filter array by string
     *
     * @param mainArr
     * @param searchText
     * @returns {any}
     */
    static filterArrayByString(mainArr, searchText) {
        if (searchText === '') {
            return mainArr;
        }
        searchText = searchText.toLowerCase();
        return mainArr.filter(itemObj => {
            return this.searchInObj(itemObj, searchText);
        });
    }
    /**
     * Search in object
     *
     * @param itemObj
     * @param searchText
     * @returns {boolean}
     */
    static searchInObj(itemObj, searchText) {
        for (const prop in itemObj) {
            if (!itemObj.hasOwnProperty(prop)) {
                continue;
            }
            const value = itemObj[prop];
            if (typeof value === 'string') {
                if (this.searchInString(value, searchText)) {
                    return true;
                }
            }
            else if (Array.isArray(value)) {
                if (this.searchInArray(value, searchText)) {
                    return true;
                }
            }
            if (typeof value === 'object') {
                if (this.searchInObj(value, searchText)) {
                    return true;
                }
            }
        }
    }
    /**
     * Search in array
     *
     * @param arr
     * @param searchText
     * @returns {boolean}
     */
    static searchInArray(arr, searchText) {
        for (const value of arr) {
            if (typeof value === 'string') {
                if (this.searchInString(value, searchText)) {
                    return true;
                }
            }
            if (typeof value === 'object') {
                if (this.searchInObj(value, searchText)) {
                    return true;
                }
            }
        }
    }
    /**
     * Search in string
     *
     * @param value
     * @param searchText
     * @returns {any}
     */
    static searchInString(value, searchText) {
        return value.toLowerCase().includes(searchText);
    }
    /**
     * Generate a unique GUID
     *
     * @returns {string}
     */
    static generateGUID() {
        function S4() {
            return Math.floor((1 + Math.random()) * 0x10000)
                .toString(16)
                .substring(1);
        }
        return S4() + S4();
    }
    /**
     * Toggle in array
     *
     * @param item
     * @param array
     */
    static toggleInArray(item, array) {
        if (array.indexOf(item) === -1) {
            array.push(item);
        }
        else {
            array.splice(array.indexOf(item), 1);
        }
    }
    /**
     * Handleize
     *
     * @param text
     * @returns {string}
     */
    static handleize(text) {
        return text.toString().toLowerCase();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbWR0L2Z1c2UvIiwic291cmNlcyI6WyJ1dGlscy9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLE9BQU8sU0FBUztJQUVsQjs7Ozs7O09BTUc7SUFDSSxNQUFNLENBQUMsbUJBQW1CLENBQUMsT0FBTyxFQUFFLFVBQVU7UUFFakQsSUFBSyxVQUFVLEtBQUssRUFBRSxFQUN0QjtZQUNJLE9BQU8sT0FBTyxDQUFDO1NBQ2xCO1FBRUQsVUFBVSxHQUFHLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUV0QyxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDNUIsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxVQUFVLENBQUMsQ0FBQztRQUNqRCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSxNQUFNLENBQUMsV0FBVyxDQUFDLE9BQU8sRUFBRSxVQUFVO1FBRXpDLEtBQU0sTUFBTSxJQUFJLElBQUksT0FBTyxFQUMzQjtZQUNJLElBQUssQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxFQUNsQztnQkFDSSxTQUFTO2FBQ1o7WUFFRCxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7WUFFNUIsSUFBSyxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQzlCO2dCQUNJLElBQUssSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEVBQzNDO29CQUNJLE9BQU8sSUFBSSxDQUFDO2lCQUNmO2FBQ0o7aUJBRUksSUFBSyxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUM5QjtnQkFDSSxJQUFLLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxFQUMxQztvQkFDSSxPQUFPLElBQUksQ0FBQztpQkFDZjthQUNKO1lBRUQsSUFBSyxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQzlCO2dCQUNJLElBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEVBQ3hDO29CQUNJLE9BQU8sSUFBSSxDQUFDO2lCQUNmO2FBQ0o7U0FDSjtJQUNMLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSxNQUFNLENBQUMsYUFBYSxDQUFDLEdBQUcsRUFBRSxVQUFVO1FBRXZDLEtBQU0sTUFBTSxLQUFLLElBQUksR0FBRyxFQUN4QjtZQUNJLElBQUssT0FBTyxLQUFLLEtBQUssUUFBUSxFQUM5QjtnQkFDSSxJQUFLLElBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxFQUMzQztvQkFDSSxPQUFPLElBQUksQ0FBQztpQkFDZjthQUNKO1lBRUQsSUFBSyxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQzlCO2dCQUNJLElBQUssSUFBSSxDQUFDLFdBQVcsQ0FBQyxLQUFLLEVBQUUsVUFBVSxDQUFDLEVBQ3hDO29CQUNJLE9BQU8sSUFBSSxDQUFDO2lCQUNmO2FBQ0o7U0FDSjtJQUNMLENBQUM7SUFFRDs7Ozs7O09BTUc7SUFDSSxNQUFNLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxVQUFVO1FBRTFDLE9BQU8sS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNwRCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNJLE1BQU0sQ0FBQyxZQUFZO1FBRXRCLFNBQVMsRUFBRTtZQUVQLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxPQUFPLENBQUM7aUJBQ3BDLFFBQVEsQ0FBQyxFQUFFLENBQUM7aUJBQ1osU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdCLENBQUM7UUFFRCxPQUFPLEVBQUUsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLEtBQUs7UUFFbkMsSUFBSyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUMvQjtZQUNJLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7U0FDcEI7YUFFRDtZQUNJLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUN4QztJQUNMLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNJLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSTtRQUV4QixPQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN6QyxDQUFDO0NBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgRnVzZVV0aWxzXG57XG4gICAgLyoqXG4gICAgICogRmlsdGVyIGFycmF5IGJ5IHN0cmluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIG1haW5BcnJcbiAgICAgKiBAcGFyYW0gc2VhcmNoVGV4dFxuICAgICAqIEByZXR1cm5zIHthbnl9XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBmaWx0ZXJBcnJheUJ5U3RyaW5nKG1haW5BcnIsIHNlYXJjaFRleHQpOiBhbnlcbiAgICB7XG4gICAgICAgIGlmICggc2VhcmNoVGV4dCA9PT0gJycgKVxuICAgICAgICB7XG4gICAgICAgICAgICByZXR1cm4gbWFpbkFycjtcbiAgICAgICAgfVxuXG4gICAgICAgIHNlYXJjaFRleHQgPSBzZWFyY2hUZXh0LnRvTG93ZXJDYXNlKCk7XG5cbiAgICAgICAgcmV0dXJuIG1haW5BcnIuZmlsdGVyKGl0ZW1PYmogPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuc2VhcmNoSW5PYmooaXRlbU9iaiwgc2VhcmNoVGV4dCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNlYXJjaCBpbiBvYmplY3RcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpdGVtT2JqXG4gICAgICogQHBhcmFtIHNlYXJjaFRleHRcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIHNlYXJjaEluT2JqKGl0ZW1PYmosIHNlYXJjaFRleHQpOiBib29sZWFuXG4gICAge1xuICAgICAgICBmb3IgKCBjb25zdCBwcm9wIGluIGl0ZW1PYmogKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZiAoICFpdGVtT2JqLmhhc093blByb3BlcnR5KHByb3ApIClcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBpdGVtT2JqW3Byb3BdO1xuXG4gICAgICAgICAgICBpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmICggdGhpcy5zZWFyY2hJblN0cmluZyh2YWx1ZSwgc2VhcmNoVGV4dCkgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBlbHNlIGlmICggQXJyYXkuaXNBcnJheSh2YWx1ZSkgKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmICggdGhpcy5zZWFyY2hJbkFycmF5KHZhbHVlLCBzZWFyY2hUZXh0KSApXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGlmICggdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyApXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgaWYgKCB0aGlzLnNlYXJjaEluT2JqKHZhbHVlLCBzZWFyY2hUZXh0KSApXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZWFyY2ggaW4gYXJyYXlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBhcnJcbiAgICAgKiBAcGFyYW0gc2VhcmNoVGV4dFxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgc2VhcmNoSW5BcnJheShhcnIsIHNlYXJjaFRleHQpOiBib29sZWFuXG4gICAge1xuICAgICAgICBmb3IgKCBjb25zdCB2YWx1ZSBvZiBhcnIgKVxuICAgICAgICB7XG4gICAgICAgICAgICBpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gJ3N0cmluZycgKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmICggdGhpcy5zZWFyY2hJblN0cmluZyh2YWx1ZSwgc2VhcmNoVGV4dCkgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgKVxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGlmICggdGhpcy5zZWFyY2hJbk9iaih2YWx1ZSwgc2VhcmNoVGV4dCkgKVxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogU2VhcmNoIGluIHN0cmluZ1xuICAgICAqXG4gICAgICogQHBhcmFtIHZhbHVlXG4gICAgICogQHBhcmFtIHNlYXJjaFRleHRcbiAgICAgKiBAcmV0dXJucyB7YW55fVxuICAgICAqL1xuICAgIHB1YmxpYyBzdGF0aWMgc2VhcmNoSW5TdHJpbmcodmFsdWUsIHNlYXJjaFRleHQpOiBhbnlcbiAgICB7XG4gICAgICAgIHJldHVybiB2YWx1ZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaFRleHQpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlIGEgdW5pcXVlIEdVSURcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtzdHJpbmd9XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyBnZW5lcmF0ZUdVSUQoKTogc3RyaW5nXG4gICAge1xuICAgICAgICBmdW5jdGlvbiBTNCgpOiBzdHJpbmdcbiAgICAgICAge1xuICAgICAgICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDApXG4gICAgICAgICAgICAgICAgICAgICAgIC50b1N0cmluZygxNilcbiAgICAgICAgICAgICAgICAgICAgICAgLnN1YnN0cmluZygxKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBTNCgpICsgUzQoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBUb2dnbGUgaW4gYXJyYXlcbiAgICAgKlxuICAgICAqIEBwYXJhbSBpdGVtXG4gICAgICogQHBhcmFtIGFycmF5XG4gICAgICovXG4gICAgcHVibGljIHN0YXRpYyB0b2dnbGVJbkFycmF5KGl0ZW0sIGFycmF5KTogdm9pZFxuICAgIHtcbiAgICAgICAgaWYgKCBhcnJheS5pbmRleE9mKGl0ZW0pID09PSAtMSApXG4gICAgICAgIHtcbiAgICAgICAgICAgIGFycmF5LnB1c2goaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZVxuICAgICAgICB7XG4gICAgICAgICAgICBhcnJheS5zcGxpY2UoYXJyYXkuaW5kZXhPZihpdGVtKSwgMSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBIYW5kbGVpemVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB0ZXh0XG4gICAgICogQHJldHVybnMge3N0cmluZ31cbiAgICAgKi9cbiAgICBwdWJsaWMgc3RhdGljIGhhbmRsZWl6ZSh0ZXh0KTogc3RyaW5nXG4gICAge1xuICAgICAgICByZXR1cm4gdGV4dC50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk7XG4gICAgfVxufVxuIl19