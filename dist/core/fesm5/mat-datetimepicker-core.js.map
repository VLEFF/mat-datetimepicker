{"version":3,"file":"mat-datetimepicker-core.js.map","sources":["ng://@mat-datetimepicker/core/adapter/datetime-adapter.ts","ng://@mat-datetimepicker/core/adapter/datetime-formats.ts","ng://@mat-datetimepicker/core/adapter/native-datetime-adapter.ts","ng://@mat-datetimepicker/core/adapter/native-datetime-formats.ts","ng://@mat-datetimepicker/core/adapter/adapter.module.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker-animations.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker-errors.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker-filtertype.ts","ng://@mat-datetimepicker/core/datetimepicker/calendar.ts","ng://@mat-datetimepicker/core/datetimepicker/calendar-body.ts","ng://@mat-datetimepicker/core/datetimepicker/clock.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker-input.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker-toggle.ts","ng://@mat-datetimepicker/core/datetimepicker/month-view.ts","ng://@mat-datetimepicker/core/datetimepicker/year-view.ts","ng://@mat-datetimepicker/core/datetimepicker/datetimepicker.module.ts"],"sourcesContent":["import { DateAdapter } from \"@angular/material/core\";\n\nexport abstract class DatetimeAdapter<D> extends DateAdapter<D> {\n\n  constructor(protected _delegate: DateAdapter<D>) {\n    super();\n  }\n\n  abstract getHour(date: D): number;\n\n  abstract getMinute(date: D): number;\n\n  abstract getFirstDateOfMonth(date: D): D;\n\n  abstract isInNextMonth(startDate: D, endDate: D): boolean;\n\n  abstract getHourNames(): string[];\n\n  abstract getMinuteNames(): string[];\n\n  abstract addCalendarHours(date: D, months: number): D;\n\n  abstract addCalendarMinutes(date: D, months: number): D;\n\n  abstract createDatetime(year: number, month: number, date: number, hour: number, minute: number): D;\n\n  getValidDateOrNull(obj: any): D | null {\n    return (this.isDateInstance(obj) && this.isValid(obj)) ? obj : null;\n  }\n\n  compareDatetime(first: D, second: D): number {\n    return this.compareDate(first, second) ||\n      this.getHour(first) - this.getHour(second) ||\n      this.getMinute(first) - this.getMinute(second);\n  }\n\n  sameDatetime(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDatetime(first, second);\n      }\n      return firstValid === secondValid;\n    }\n    return first === second;\n  }\n\n  sameYear(first: D, second: D) {\n    return first && second && this.getYear(first) === this.getYear(second);\n  }\n\n  sameDay(first: D, second: D) {\n    return first && second && this.getDate(first) === this.getDate(second) && this.sameMonthAndYear(first, second);\n  }\n\n  sameHour(first: D, second: D) {\n    return first && second && this.getHour(first) === this.getHour(second) && this.sameDay(first, second);\n  }\n\n  sameMinute(first: D, second: D) {\n    return first && second && this.getMinute(first) === this.getMinute(second) && this.sameHour(first, second);\n  }\n\n  sameMonthAndYear(first: D | null, second: D | null): boolean {\n    if (first && second) {\n      const firstValid = this.isValid(first);\n      const secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !(this.getYear(first) - this.getYear(second) ||\n          this.getMonth(first) - this.getMonth(second));\n      }\n      return firstValid === secondValid;\n    }\n    return first === second;\n  }\n\n  // delegate\n  clone(date: D): D {\n    return this._delegate.clone(date);\n  }\n\n  addCalendarYears(date: D, years: number): D {\n    return this._delegate.addCalendarYears(date, years);\n  }\n\n  addCalendarMonths(date: D, months: number): D {\n    return this._delegate.addCalendarMonths(date, months);\n  }\n\n  addCalendarDays(date: D, days: number): D {\n    return this._delegate.addCalendarDays(date, days);\n  }\n\n  getYear(date: D): number {\n    return this._delegate.getYear(date);\n  }\n\n  getMonth(date: D): number {\n    return this._delegate.getMonth(date);\n  }\n\n  getDate(date: D): number {\n    return this._delegate.getDate(date);\n  }\n\n  getDayOfWeek(date: D): number {\n    return this._delegate.getDayOfWeek(date);\n  }\n\n  getMonthNames(style): string[] {\n    return this._delegate.getMonthNames(style);\n  }\n\n  getDateNames(): string[] {\n    return this._delegate.getDateNames();\n  }\n\n  getDayOfWeekNames(style): string[] {\n    return this._delegate.getDayOfWeekNames(style);\n  }\n\n  getYearName(date: D): string {\n    return this._delegate.getYearName(date);\n  }\n\n  getFirstDayOfWeek(): number {\n    return this._delegate.getFirstDayOfWeek();\n  }\n\n  getNumDaysInMonth(date: D): number {\n    return this._delegate.getNumDaysInMonth(date);\n  }\n\n  createDate(year: number, month: number, date: number): D {\n    return this._delegate.createDate(year, month, date);\n  }\n\n  today(): D {\n    return this._delegate.today();\n  }\n\n  parse(value: any, parseFormat: any): D | null {\n    return this._delegate.parse(value, parseFormat);\n  }\n\n  format(date: D, displayFormat: any): string {\n    return this._delegate.format(date, displayFormat);\n  }\n\n  toIso8601(date: D): string {\n    return this._delegate.toIso8601(date);\n  }\n\n  isDateInstance(obj: any): boolean {\n    return this._delegate.isDateInstance(obj);\n  }\n\n  isValid(date: D): boolean {\n    return this._delegate.isValid(date);\n  }\n\n  invalid(): D {\n    return this._delegate.invalid();\n  }\n\n  clampDate(date: D, min?: D | null, max?: D | null): D {\n    if (min && this.compareDatetime(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDatetime(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\n","import { InjectionToken } from \"@angular/core\";\n\nexport interface MatDatetimeFormats {\n  parse: {\n    dateInput?: any;\n    monthInput?: any;\n    timeInput?: any;\n    datetimeInput?: any;\n  };\n  display: {\n    dateInput: any;\n    monthInput: any;\n    timeInput: any;\n    datetimeInput: any;\n    monthYearLabel: any;\n    dateA11yLabel: any;\n    monthYearA11yLabel: any;\n    popupHeaderDateLabel: any;\n  };\n}\n\nexport const MAT_DATETIME_FORMATS = new InjectionToken<MatDatetimeFormats>(\"mat-datetime-formats\");\n","import {\n  Inject,\n  Injectable,\n  Optional\n} from \"@angular/core\";\nimport {\n  DateAdapter,\n  MAT_DATE_LOCALE\n} from \"@angular/material\";\nimport { DatetimeAdapter } from \"./datetime-adapter\";\n\n/** The default hour names to use if Intl API is not available. */\nconst DEFAULT_HOUR_NAMES = range(24, i => String(i));\n\n/** The default minute names to use if Intl API is not available. */\nconst DEFAULT_MINUTE_NAMES = range(60, i => String(i));\n\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n@Injectable()\nexport class NativeDatetimeAdapter extends DatetimeAdapter<Date> {\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, _delegate: DateAdapter<Date>) {\n    super(_delegate);\n    this.setLocale(matDateLocale);\n  }\n\n  clone(date: Date): Date {\n    return this.createDatetime(this.getYear(date), this.getMonth(date), this.getDate(date), this.getHour(date), this.getMinute(date));\n  }\n\n  getHour(date: Date): number {\n    return date.getHours();\n  }\n\n  getMinute(date: Date): number {\n    return date.getMinutes();\n  }\n\n  isInNextMonth(startDate: Date, endDate: Date): boolean {\n    const nextMonth = this.getDateInNextMonth(startDate);\n    return this.sameMonthAndYear(nextMonth, endDate);\n  }\n\n  createDatetime(year: number, month: number, date: number, hour: number, minute: number): Date {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    if (hour < 0 || hour > 23) {\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\n    }\n\n    if (minute < 0 || minute > 59) {\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\n    }\n\n    const result = this._createDateWithOverflow(year, month, date, hour, minute);\n\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n    if (result.getMonth() !== month) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  private getDateInNextMonth(date: Date) {\n    return new Date(date.getFullYear(), date.getMonth() + 1, 1,\n      date.getHours(), date.getMinutes());\n  }\n\n  getFirstDateOfMonth(date: Date): Date {\n    const result = new Date();\n    result.setFullYear(date.getFullYear(), date.getMonth(), 1);\n    return result;\n  }\n\n  getHourNames(): string[] {\n    return DEFAULT_HOUR_NAMES;\n  }\n\n  getMinuteNames(): string[] {\n    return DEFAULT_MINUTE_NAMES;\n  }\n\n  addCalendarYears(date: Date, years: number): Date {\n    return this.addCalendarMonths(date, years * 12);\n  }\n\n  addCalendarMonths(date: Date, months: number): Date {\n    let newDate = this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date), this.getHour(date), this.getMinute(date));\n\n    // It's possible to wind up in the wrong month if the original month has more days than the new\n    // month. In this case we want to go to the last day of the desired month.\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n    // guarantee this.\n    if (this.getMonth(newDate) !== ((this.getMonth(date) + months) % 12 + 12) % 12) {\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0, this.getHour(date), this.getMinute(date));\n    }\n\n    return newDate;\n  }\n\n  addCalendarDays(date: Date, days: number): Date {\n    return this._createDateWithOverflow(\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days, this.getHour(date), this.getMinute(date));\n  }\n\n  addCalendarHours(date: Date, hours: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date), this.getDate(date),\n      this.getHour(date) + hours, this.getMinute(date));\n  }\n\n  addCalendarMinutes(date: Date, minutes: number): Date {\n    return this._createDateWithOverflow(\n      this.getYear(date), this.getMonth(date), this.getDate(date),\n      this.getHour(date), this.getMinute(date) + minutes);\n  }\n\n  toIso8601(date: Date): string {\n    return super.toIso8601(date) + \"T\" + [\n      this._2digit(date.getUTCHours()),\n      this._2digit(date.getUTCMinutes())\n    ].join(\":\");\n  }\n\n  /**\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\n   * other browsers do not. We remove them to make output consistent and because they interfere with\n   * date parsing.\n   * @param str The string to strip direction characters from.\n   * @returns The stripped string.\n   */\n  private _stripDirectionalityCharacters(str: string) {\n    return str.replace(/[\\u200e\\u200f]/g, \"\");\n  }\n\n  /**\n   * Pads a number to make it two digits.\n   * @param n The number to pad.\n   * @returns The padded number.\n   */\n  private _2digit(n: number) {\n    return (\"00\" + n).slice(-2);\n  }\n\n  /** Creates a date but allows the month and date to overflow. */\n  private _createDateWithOverflow(year: number, month: number, date: number,\n                                  hours: number, minutes: number) {\n    const result = new Date(year, month, date, hours, minutes);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(this.getYear(result) - 1900);\n    }\n    return result;\n  }\n}\n","import { MatDatetimeFormats } from \"./datetime-formats\";\n\nexport const MAT_NATIVE_DATETIME_FORMATS: MatDatetimeFormats = {\n  parse: {},\n  display: {\n    dateInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\"},\n    monthInput: {month: \"long\"},\n    datetimeInput: {year: \"numeric\", month: \"2-digit\", day: \"2-digit\", hour: \"2-digit\", minute: \"2-digit\"},\n    timeInput: {hour: \"2-digit\", minute: \"2-digit\"},\n    monthYearLabel: {year: \"numeric\", month: \"short\"},\n    dateA11yLabel: {year: \"numeric\", month: \"long\", day: \"numeric\"},\n    monthYearA11yLabel: {year: \"numeric\", month: \"long\"},\n    popupHeaderDateLabel: {weekday: \"short\", month: \"short\", day: \"2-digit\"}\n  }\n};\n","import { NgModule } from \"@angular/core\";\nimport {\n  MatNativeDateModule,\n  NativeDateModule\n} from \"@angular/material\";\nimport { DatetimeAdapter } from \"./datetime-adapter\";\nimport { MAT_DATETIME_FORMATS } from \"./datetime-formats\";\nimport { NativeDatetimeAdapter } from \"./native-datetime-adapter\";\nimport { MAT_NATIVE_DATETIME_FORMATS } from \"./native-datetime-formats\";\n\n// tslint:disable max-classes-per-file\n@NgModule({\n  imports: [NativeDateModule],\n  providers: [\n    {\n      provide: DatetimeAdapter,\n      useClass: NativeDatetimeAdapter\n    }\n  ]\n})\nexport class NativeDatetimeModule {\n}\n\n@NgModule({\n  imports: [\n    NativeDatetimeModule,\n    MatNativeDateModule\n  ],\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_NATIVE_DATETIME_FORMATS}]\n})\nexport class MatNativeDatetimeModule {\n}\n","import {\n  animate,\n  AnimationTriggerMetadata,\n  keyframes,\n  state,\n  style,\n  transition,\n  trigger\n} from \"@angular/animations\";\n\n/**\n * This animation fades in the background color and text content of the\n * select's options. It is time delayed to occur 100ms after the overlay\n * panel has transformed in.\n */\nexport const fadeInContent: AnimationTriggerMetadata = trigger(\"fadeInContent\", [\n  state(\"showing\", style({opacity: 1})),\n  transition(\"void => showing\", [\n    style({opacity: 0}),\n    animate(`150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)`)\n  ])\n]);\n\nexport const slideCalendar: AnimationTriggerMetadata = trigger(\"slideCalendar\", [\n  transition(\"* => left\", [\n    animate(180, keyframes([\n      style({transform: \"translateX(100%)\", offset: 0.5}),\n      style({transform: \"translateX(-100%)\", offset: 0.51}),\n      style({transform: \"translateX(0)\", offset: 1})\n    ]))\n  ]),\n  transition(\"* => right\", [\n    animate(180, keyframes([\n      style({transform: \"translateX(-100%)\", offset: 0.5}),\n      style({transform: \"translateX(100%)\", offset: 0.51}),\n      style({transform: \"translateX(0)\", offset: 1})\n    ]))\n  ])\n]);\n","/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatetimepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDatetimeModule, MatMomentDatetimeModule, or provide a ` +\n      `custom implementation.`);\n}\n","export enum MatDatetimepickerFilterType {\n  DATE, HOUR, MINUTE\n}\n","import {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW\n} from \"@angular/cdk/keycodes\";\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { MatDatepickerIntl } from \"@angular/material\";\nimport { Subscription } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\nimport {\n  MAT_DATETIME_FORMATS,\n  MatDatetimeFormats\n} from \"../adapter/datetime-formats\";\nimport { slideCalendar } from \"./datetimepicker-animations\";\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: \"mat-datetimepicker-calendar\",\n  templateUrl: \"calendar.html\",\n  styleUrls: [\"calendar.scss\"],\n  host: {\n    \"[class.mat-datetimepicker-calendar]\": \"true\",\n    \"tabindex\": \"0\",\n    \"(keydown)\": \"_handleCalendarBodyKeydown($event)\"\n  },\n  animations: [slideCalendar],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatDatetimepickerCalendar<D> implements AfterContentInit, OnDestroy {\n\n  private _intlChanges: Subscription;\n\n  @Output() _userSelection = new EventEmitter<void>();\n\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null {\n    return this._startAt;\n  }\n\n  set startAt(value: D | null) {\n    this._startAt = this._adapter.getValidDateOrNull(value);\n  }\n\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: \"clock\" | \"month\" | \"year\" = \"month\";\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null {\n    return this._selected;\n  }\n\n  set selected(value: D | null) {\n    this._selected = this._adapter.getValidDateOrNull(value);\n  }\n\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null {\n    return this._minDate;\n  }\n\n  set minDate(value: D | null) {\n    this._minDate = this._adapter.getValidDateOrNull(value);\n  }\n\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: D | null) {\n    this._maxDate = this._adapter.getValidDateOrNull(value);\n  }\n\n  private _maxDate: D | null;\n\n  @Input() timeInterval: number = 1;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\n\n  /** Emits when the currently selected date changes. */\n  @Output() selectedChange = new EventEmitter<D>();\n\n  /** Date filter for the month and year views. */\n  _dateFilterForViews = (date: D) => {\n    return !!date &&\n      (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.DATE)) &&\n      (!this.minDate || this._adapter.compareDate(date, this.minDate) >= 0) &&\n      (!this.maxDate || this._adapter.compareDate(date, this.maxDate) <= 0);\n  }\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get _activeDate(): D {\n    return this._clampedActiveDate;\n  }\n\n  set _activeDate(value: D) {\n    const oldActiveDate = this._clampedActiveDate;\n    this._clampedActiveDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\n    if (oldActiveDate && this._clampedActiveDate && this._currentView === \"month\" &&\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._clampedActiveDate)) {\n      if (this._adapter.isInNextMonth(oldActiveDate, this._clampedActiveDate)) {\n        this.calendarState(\"right\");\n      } else {\n        this.calendarState(\"left\");\n      }\n    }\n  }\n\n  private _clampedActiveDate: D;\n\n  _userSelected(): void {\n    this._userSelection.emit();\n  }\n\n  /** Whether the calendar is in month view. */\n  _currentView: \"clock\" | \"month\" | \"year\" = \"month\";\n  _clockView: \"hour\" | \"minute\" = \"hour\";\n\n  /** The label for the current calendar view. */\n  get _yearLabel(): string {\n    return this._adapter.getYearName(this._activeDate);\n  }\n\n  get _monthYearLabel(): string {\n    return this._currentView === \"month\" ? this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)] :\n      this._adapter.getYearName(this._activeDate);\n  }\n\n  get _dateLabel(): string {\n    switch (this.type) {\n      case \"month\":\n        return this._adapter.getMonthNames(\"long\")[this._adapter.getMonth(this._activeDate)];\n      default:\n        return this._adapter.format(this._activeDate, this._dateFormats.display.popupHeaderDateLabel);\n    }\n  }\n\n  get _hoursLabel(): string {\n    return this._2digit(this._adapter.getHour(this._activeDate));\n  }\n\n  get _minutesLabel(): string {\n    return this._2digit(this._adapter.getMinute(this._activeDate));\n  }\n\n  _calendarState: string;\n\n  constructor(private _elementRef: ElementRef,\n              private _intl: MatDatepickerIntl,\n              private _ngZone: NgZone,\n              @Optional() private _adapter: DatetimeAdapter<D>,\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n    if (!this._adapter) {\n      throw createMissingDateImplError(\"DatetimeAdapter\");\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  ngAfterContentInit() {\n    this._activeDate = this.startAt || this._adapter.today();\n    this._focusActiveCell();\n    if (this.type === \"month\") {\n      this._currentView = \"year\";\n    } else if (this.type === \"time\") {\n      this._currentView = \"clock\";\n    } else {\n      this._currentView = this.startView || \"month\";\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(date: D): void {\n    if (this.type === \"date\") {\n      if (!this._adapter.sameDate(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n    } else {\n      this._activeDate = date;\n      this._currentView = \"clock\";\n    }\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelected(month: D): void {\n    if (this.type === \"month\") {\n      if (!this._adapter.sameMonthAndYear(month, this.selected)) {\n        this.selectedChange.emit(this._adapter.getFirstDateOfMonth(month));\n      }\n    } else {\n      this._activeDate = month;\n      this._currentView = \"month\";\n      this._clockView = \"hour\";\n    }\n  }\n\n  _timeSelected(date: D): void {\n    if (this._clockView !== \"minute\") {\n      this._activeDate = date;\n      this._clockView = \"minute\";\n    } else {\n      if (!this._adapter.sameDatetime(date, this.selected)) {\n        this.selectedChange.emit(date);\n      }\n    }\n  }\n\n  _onActiveDateChange(date: D) {\n    this._activeDate = date;\n  }\n\n  _yearClicked(): void {\n    this._currentView = \"year\";\n  }\n\n  _dateClicked(): void {\n    if (this.type !== \"month\") {\n      this._currentView = \"month\";\n    }\n  }\n\n  _hoursClicked(): void {\n    this._currentView = \"clock\";\n    this._clockView = \"hour\";\n  }\n\n  _minutesClicked(): void {\n    this._currentView = \"clock\";\n    this._clockView = \"minute\";\n  }\n\n  /** Handles user clicks on the previous button. */\n  _previousClicked(): void {\n    this._activeDate = this._currentView === \"month\" ?\n      this._adapter.addCalendarMonths(this._activeDate, -1) :\n      this._adapter.addCalendarYears(this._activeDate, -1);\n  }\n\n  /** Handles user clicks on the next button. */\n  _nextClicked(): void {\n    this._activeDate = this._currentView === \"month\" ?\n      this._adapter.addCalendarMonths(this._activeDate, 1) :\n      this._adapter.addCalendarYears(this._activeDate, 1);\n  }\n\n  /** Whether the previous period button is enabled. */\n  _previousEnabled(): boolean {\n    if (!this.minDate) {\n      return true;\n    }\n    return !this.minDate || !this._isSameView(this._activeDate, this.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  _nextEnabled(): boolean {\n    return !this.maxDate || !this._isSameView(this._activeDate, this.maxDate);\n  }\n\n  /** Handles keydown events on the calendar body. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n    if (this._currentView === \"month\") {\n      this._handleCalendarBodyKeydownInMonthView(event);\n    } else if (this._currentView === \"year\") {\n      this._handleCalendarBodyKeydownInYearView(event);\n    } else {\n      this._handleCalendarBodyKeydownInClockView(event);\n    }\n  }\n\n  _focusActiveCell() {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\n        this._elementRef.nativeElement.focus();\n      });\n    });\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    return this._currentView === \"month\" ?\n      this._adapter.getYear(date1) === this._adapter.getYear(date2) &&\n      this._adapter.getMonth(date1) === this._adapter.getMonth(date2) :\n      this._adapter.getYear(date1) === this._adapter.getYear(date2);\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  private _handleCalendarBodyKeydownInMonthView(event: KeyboardEvent): void {\n    // tslint:disable-next-line:deprecation\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\n          1 - this._adapter.getDate(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._adapter.addCalendarDays(this._activeDate,\n          (this._adapter.getNumDaysInMonth(this._activeDate) -\n            this._adapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this._activeDate = event.altKey ?\n          this._adapter.addCalendarYears(this._activeDate, -1) :\n          this._adapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate = event.altKey ?\n          this._adapter.addCalendarYears(this._activeDate, 1) :\n          this._adapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n        if (this._dateFilterForViews(this._activeDate)) {\n          this._dateSelected(this._activeDate);\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  private _handleCalendarBodyKeydownInYearView(event: KeyboardEvent): void {\n    // tslint:disable-next-line:deprecation\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case RIGHT_ARROW:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case UP_ARROW:\n        this._activeDate = this._prevMonthInSameCol(this._activeDate);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._nextMonthInSameCol(this._activeDate);\n        break;\n      case HOME:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\n          -this._adapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this._activeDate = this._adapter.addCalendarMonths(this._activeDate,\n          11 - this._adapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this._activeDate =\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this._activeDate =\n          this._adapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n        this._monthSelected(this._activeDate);\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  private _handleCalendarBodyKeydownInClockView(event: KeyboardEvent): void {\n    // tslint:disable-next-line:deprecation\n    switch (event.keyCode) {\n      case UP_ARROW:\n        this._activeDate = this._clockView === \"hour\" ?\n          this._adapter.addCalendarHours(this._activeDate, 1) :\n          this._adapter.addCalendarMinutes(this._activeDate, 1);\n        break;\n      case DOWN_ARROW:\n        this._activeDate = this._clockView === \"hour\" ?\n          this._adapter.addCalendarHours(this._activeDate, -1) :\n          this._adapter.addCalendarMinutes(this._activeDate, -1);\n        break;\n      case ENTER:\n        this._timeSelected(this._activeDate);\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /**\n   * Determine the date for the month that comes before the given month in the same column in the\n   * calendar table.\n   */\n  private _prevMonthInSameCol(date: D): D {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    const increment = this._adapter.getMonth(date) <= 4 ? -5 :\n      (this._adapter.getMonth(date) >= 7 ? -7 : -12);\n    return this._adapter.addCalendarMonths(date, increment);\n  }\n\n  /**\n   * Determine the date for the month that comes after the given month in the same column in the\n   * calendar table.\n   */\n  private _nextMonthInSameCol(date: D): D {\n    // Determine how many months to jump forward given that there are 2 empty slots at the beginning\n    // of each year.\n    const increment = this._adapter.getMonth(date) <= 4 ? 7 :\n      (this._adapter.getMonth(date) >= 7 ? 5 : 12);\n    return this._adapter.addCalendarMonths(date, increment);\n  }\n\n  private calendarState(direction: string): void {\n    this._calendarState = direction;\n  }\n\n  _calendarStateDone() {\n    this._calendarState = \"\";\n  }\n\n  private _2digit(n: number) {\n    return (\"00\" + n).slice(-2);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation\n} from \"@angular/core\";\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatDatetimepickerCalendarCell {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean) {\n  }\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"[mat-datetimepicker-calendar-body]\",\n  templateUrl: \"calendar-body.html\",\n  styleUrls: [\"calendar-body.scss\"],\n  host: {\n    \"class\": \"mat-datetimepicker-calendar-body\"\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatDatetimepickerCalendarBody {\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatDatetimepickerCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** The value in the table that is currently selected. */\n  @Input() selectedValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols = 7;\n\n  /** Whether to allow selection of disabled cells. */\n  @Input() allowDisabledSelection = false;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell = 0;\n\n  /** Emits when a new value is selected. */\n  @Output() selectedValueChange = new EventEmitter<number>();\n\n  _cellClicked(cell: MatDatetimepickerCalendarCell): void {\n    if (!this.allowDisabledSelection && !cell.enabled) {\n      return;\n    }\n    this.selectedValueChange.emit(cell.value);\n  }\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  get _firstRowOffset(): number {\n    return this.rows && this.rows.length && this.rows[0].length ?\n      this.numCols - this.rows[0].length : 0;\n  }\n\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber === this.activeCell;\n  }\n}\n","/* tslint:disable */\nimport {\n  AfterContentInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output\n} from \"@angular/core\";\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\n\nexport const CLOCK_RADIUS = 50;\nexport const CLOCK_INNER_RADIUS = 27.5;\nexport const CLOCK_OUTER_RADIUS = 41.25;\nexport const CLOCK_TICK_RADIUS = 7.0833;\n\nexport type ClockView = \"hour\" | \"minute\";\n\n/**\n * A clock that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: \"mat-datetimepicker-clock\",\n  templateUrl: \"clock.html\",\n  styleUrls: [\"clock.scss\"],\n  host: {\n    \"role\": \"clock\",\n    \"(mousedown)\": \"_handleMousedown($event)\"\n  }\n})\nexport class MatDatetimepickerClock<D> implements AfterContentInit {\n\n  @Output() _userSelection = new EventEmitter<void>();\n\n  /**\n   * The date to display in this clock view.\n   */\n  @Input()\n  get activeDate(): D {\n    return this._activeDate;\n  }\n\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    this._activeDate = this._adapter.clampDate(value, this.minDate, this.maxDate);\n    if (!this._adapter.sameMinute(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D | null {\n    return this._selected;\n  }\n\n  set selected(value: D | null) {\n    this._selected = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n    if (this._selected) {\n      this.activeDate = this._selected;\n    }\n  }\n\n  private _selected: D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null {\n    return this._minDate;\n  }\n\n  set minDate(value: D | null) {\n    this._minDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n  }\n\n  private _minDate: D | null;\n\n  private _timeChanged = false;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null {\n    return this._maxDate;\n  }\n\n  set maxDate(value: D | null) {\n    this._maxDate = this._adapter.getValidDateOrNull(this._adapter.deserialize(value));\n  }\n\n  private _maxDate: D | null;\n\n  /** Whether the clock should be started in hour or minute view. */\n  @Input()\n  set startView(value: ClockView) {\n    this._hourView = value != \"minute\";\n  }\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D, type: MatDatetimepickerFilterType) => boolean;\n\n  @Input() interval: number = 1;\n\n  @Input() twelvehour: boolean = false;\n\n  /** Emits when the currently selected date changes. */\n  @Output() selectedChange = new EventEmitter<D>();\n\n  @Output() activeDateChange = new EventEmitter<D>();\n\n  /** Hours and Minutes representing the clock view. */\n  _hours: Array<Object> = [];\n  _minutes: Array<Object> = [];\n\n  /** Whether the clock is in hour view. */\n  _hourView: boolean = true;\n\n  _selectedHour: number;\n  _selectedMinute: number;\n\n  get _hand(): any {\n    this._selectedHour = this._adapter.getHour(this.activeDate);\n    this._selectedMinute = this._adapter.getMinute(this.activeDate);\n    let deg = 0;\n    let radius = CLOCK_OUTER_RADIUS;\n    if (this._hourView) {\n      let outer = this._selectedHour > 0 && this._selectedHour < 13;\n      radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\n      if (this.twelvehour) {\n        radius = CLOCK_OUTER_RADIUS;\n      }\n      deg = Math.round(this._selectedHour * (360 / (24 / 2)));\n    } else {\n      deg = Math.round(this._selectedMinute * (360 / 60));\n    }\n    return {\n      \"transform\": `rotate(${deg}deg)`,\n      \"height\": `${radius}%`,\n      \"margin-top\": `${50 - radius}%`\n    };\n  }\n\n  private mouseMoveListener: any;\n  private mouseUpListener: any;\n\n  constructor(private _element: ElementRef,\n              private _adapter: DatetimeAdapter<D>) {\n    this.mouseMoveListener = (event: any) => {\n      this._handleMousemove(event);\n    };\n    this.mouseUpListener = () => {\n      this._handleMouseup();\n    };\n  }\n\n  ngAfterContentInit() {\n    this.activeDate = this._activeDate || this._adapter.today();\n    this._init();\n  }\n\n  /** Handles mousedown events on the clock body. */\n  _handleMousedown(event: any) {\n    this._timeChanged = false;\n    this.setTime(event);\n    document.addEventListener(\"mousemove\", this.mouseMoveListener);\n    document.addEventListener(\"touchmove\", this.mouseMoveListener);\n    document.addEventListener(\"mouseup\", this.mouseUpListener);\n    document.addEventListener(\"touchend\", this.mouseUpListener);\n  }\n\n  _handleMousemove(event: any) {\n    event.preventDefault();\n    this.setTime(event);\n  }\n\n  _handleMouseup() {\n    document.removeEventListener(\"mousemove\", this.mouseMoveListener);\n    document.removeEventListener(\"touchmove\", this.mouseMoveListener);\n    document.removeEventListener(\"mouseup\", this.mouseUpListener);\n    document.removeEventListener(\"touchend\", this.mouseUpListener);\n    if (this._timeChanged) {\n      this.selectedChange.emit(this.activeDate);\n      if (!this._hourView) {\n        this._userSelection.emit();\n      }\n    }\n  }\n\n  /** Initializes this clock view. */\n  private _init() {\n    this._hours.length = 0;\n    this._minutes.length = 0;\n\n    let hourNames = this._adapter.getHourNames();\n    let minuteNames = this._adapter.getMinuteNames();\n\n    if (this.twelvehour) {\n      for (let i = 1; i < (hourNames.length / 2) + 1; i++) {\n        let radian = i / 6 * Math.PI;\n        let radius = CLOCK_OUTER_RADIUS;\n        const date = this._adapter.createDatetime(\n          this._adapter.getYear(this.activeDate),\n          this._adapter.getMonth(this.activeDate),\n          this._adapter.getDate(this.activeDate), i + 1, 0);\n        let enabled =\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0);\n        this._hours.push({\n          value: i,\n          displayValue: i === 0 ? \"00\" : hourNames[i],\n          enabled: enabled,\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS\n        });\n      }\n    } else {\n      for (let i = 0; i < hourNames.length; i++) {\n        let radian = i / 6 * Math.PI;\n        let outer = i > 0 && i < 13,\n          radius = outer ? CLOCK_OUTER_RADIUS : CLOCK_INNER_RADIUS;\n        const date = this._adapter.createDatetime(\n          this._adapter.getYear(this.activeDate),\n          this._adapter.getMonth(this.activeDate),\n          this._adapter.getDate(this.activeDate), i, 0);\n        let enabled =\n          (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\n          (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\n          (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.HOUR));\n        this._hours.push({\n          value: i,\n          displayValue: i === 0 ? \"00\" : hourNames[i],\n          enabled: enabled,\n          top: CLOCK_RADIUS - Math.cos(radian) * radius - CLOCK_TICK_RADIUS,\n          left: CLOCK_RADIUS + Math.sin(radian) * radius - CLOCK_TICK_RADIUS,\n          fontSize: i > 0 && i < 13 ? \"\" : \"80%\"\n        });\n      }\n    }\n\n    for (let i = 0; i < minuteNames.length; i += 5) {\n      let radian = i / 30 * Math.PI;\n      const date = this._adapter.createDatetime(\n        this._adapter.getYear(this.activeDate),\n        this._adapter.getMonth(this.activeDate),\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), i);\n      let enabled =\n        (!this.minDate || this._adapter.compareDatetime(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._adapter.compareDatetime(date, this.maxDate) <= 0) &&\n        (!this.dateFilter || this.dateFilter(date, MatDatetimepickerFilterType.MINUTE));\n      this._minutes.push({\n        value: i,\n        displayValue: i === 0 ? \"00\" : minuteNames[i],\n        enabled: enabled,\n        top: CLOCK_RADIUS - Math.cos(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS,\n        left: CLOCK_RADIUS + Math.sin(radian) * CLOCK_OUTER_RADIUS - CLOCK_TICK_RADIUS\n      });\n    }\n  }\n\n  /**\n   * Set Time\n   * @param event\n   */\n  private setTime(event: any) {\n    let trigger = this._element.nativeElement;\n    let triggerRect = trigger.getBoundingClientRect();\n    let width = trigger.offsetWidth;\n    let height = trigger.offsetHeight;\n    let pageX = event.pageX !== undefined ? event.pageX : event.touches[0].pageX;\n    let pageY = event.pageY !== undefined ? event.pageY : event.touches[0].pageY;\n    let x = (width / 2) - (pageX - triggerRect.left - window.pageXOffset);\n    let y = (height / 2) - (pageY - triggerRect.top - window.pageYOffset);\n    let radian = Math.atan2(-x, y);\n    let unit = Math.PI / (this._hourView ? 6 : (this.interval ? (30 / this.interval) : 30));\n    let z = Math.sqrt(x * x + y * y);\n    let outer = this._hourView && z > ((width * (CLOCK_OUTER_RADIUS / 100)) +\n      (width * (CLOCK_INNER_RADIUS / 100))) / 2;\n\n    if (radian < 0) {\n      radian = Math.PI * 2 + radian;\n    }\n    let value = Math.round(radian / unit);\n\n    let date;\n    if (this._hourView) {\n      if (this.twelvehour) {\n        value = value === 0 ? 12 : value;\n      } else {\n        if (value === 12) {\n          value = 0;\n        }\n        value = outer ? (value === 0 ? 12 : value) : value === 0 ? 0 : value + 12;\n      }\n      date = this._adapter.createDatetime(\n        this._adapter.getYear(this.activeDate),\n        this._adapter.getMonth(this.activeDate),\n        this._adapter.getDate(this.activeDate), value, this._adapter.getMinute(this.activeDate));\n    } else {\n      if (this.interval) {\n        value *= this.interval;\n      }\n      if (value === 60) {\n        value = 0;\n      }\n      date = this._adapter.createDatetime(\n        this._adapter.getYear(this.activeDate),\n        this._adapter.getMonth(this.activeDate),\n        this._adapter.getDate(this.activeDate), this._adapter.getHour(this.activeDate), value);\n    }\n\n    const clamped = this._adapter.clampDate(date, this.minDate, this.maxDate);\n    if (date === clamped) {\n      this._timeChanged = true;\n      this.activeDate = clamped;\n      this.activeDateChange.emit(this.activeDate);\n    }\n  }\n}\n","import { Directionality } from \"@angular/cdk/bidi\";\nimport { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { ESCAPE } from \"@angular/cdk/keycodes\";\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  PositionStrategy\n} from \"@angular/cdk/overlay\";\nimport { ComponentPortal } from \"@angular/cdk/portal\";\nimport { DOCUMENT } from \"@angular/common\";\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  EventEmitter,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { MAT_DATEPICKER_SCROLL_STRATEGY } from \"@angular/material\";\nimport {\n  MatDialog,\n  MatDialogRef\n} from \"@angular/material/dialog\";\nimport { Subject, Subscription } from \"rxjs\";\nimport { first } from \"rxjs/operators\";\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\nimport { MatDatetimepickerCalendar } from \"./calendar\";\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\nimport { MatDatetimepickerInput } from \"./datetimepicker-input\";\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datetimepickerUid = 0;\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  selector: \"mat-datetimepicker-content\",\n  templateUrl: \"datetimepicker-content.html\",\n  styleUrls: [\"datetimepicker-content.scss\"],\n  host: {\n    \"class\": \"mat-datetimepicker-content\",\n    \"[class.mat-datetimepicker-content-touch]\": \"datetimepicker?.touchUi\",\n    \"(keydown)\": \"_handleKeydown($event)\"\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatDatetimepickerContent<D> implements AfterContentInit {\n  datetimepicker: MatDatetimepicker<D>;\n\n  @ViewChild(MatDatetimepickerCalendar) _calendar: MatDatetimepickerCalendar<D>;\n\n  ngAfterContentInit() {\n    this._calendar._focusActiveCell();\n  }\n\n  /**\n   * Handles keydown event on datepicker content.\n   * @param event The event.\n   */\n  _handleKeydown(event: KeyboardEvent): void {\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === ESCAPE) {\n      this.datetimepicker.close();\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n\n@Component({\n  selector: \"mat-datetimepicker\",\n  exportAs: \"matDatetimepicker\",\n  template: \"\",\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false\n})\nexport class MatDatetimepicker<D> implements OnDestroy {\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.value : null);\n  }\n\n  set startAt(date: D | null) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(date);\n  }\n\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: \"clock\" | \"month\" | \"year\" = \"month\";\n  @Input() mode: \"auto\" | \"portrait\" | \"landscape\" = \"auto\";\n  @Input() timeInterval: number = 1;\n\n  @Input()\n  get openOnFocus(): boolean { return this._openOnFocus; }\n  set openOnFocus(value: boolean) { this._openOnFocus = coerceBooleanProperty(value); }\n  private _openOnFocus: boolean;\n\n  _handleFocus() {\n    if (!this.opened && this.openOnFocus) {\n      this.open();\n    }\n  }\n\n  @Input()\n  get type() {\n    return this._type;\n  }\n\n  set type(value: \"date\" | \"time\" | \"month\" | \"datetime\") {\n    this._type = value || \"date\";\n  }\n\n  private _type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean {\n    return this._touchUi;\n  }\n\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n      this._datepickerInput.disabled : !!this._disabled;\n  }\n\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._disabledChange.next(newValue);\n    }\n  }\n\n  private _disabled: boolean;\n\n  /**\n   * Emits new selected date when selected date changes.\n   * @deprecated Switch to the `dateChange` and `dateInput` binding on the input element.\n   */\n  @Output() selectedChanged = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Emits when the datepicker has been opened. */\n  // tslint:disable-next-line:no-output-rename\n  @Output(\"opened\") openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  // tslint:disable-next-line:no-output-rename\n  @Output(\"closed\") closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Whether the calendar is open. */\n  opened = false;\n\n  /** The id for the datepicker calendar. */\n  id = `mat-datetimepicker-${datetimepickerUid++}`;\n\n  /** The currently selected date. */\n  get _selected(): D | null {\n    return this._validSelected;\n  }\n\n  set _selected(value: D | null) {\n    this._validSelected = value;\n  }\n\n  private _validSelected: D | null = null;\n\n  /** The minimum selectable date. */\n  get _minDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  get _maxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  get _dateFilter(): (date: D | null, type: MatDatetimepickerFilterType) => boolean {\n    return this._datepickerInput && this._datepickerInput._dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<any> | null;\n\n  /** A portal containing the calendar for this datepicker. */\n  private _calendarPortal: ComponentPortal<MatDatetimepickerContent<D>>;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  private _inputSubscription = Subscription.EMPTY;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: MatDatetimepickerInput<D>;\n\n  /** Emits when the datepicker is disabled. */\n  _disabledChange = new Subject<boolean>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) private _scrollStrategy,\n              @Optional() private _dateAdapter: DatetimeAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError(\"DateAdapter\");\n    }\n  }\n\n  ngOnDestroy() {\n    this.close();\n    this._inputSubscription.unsubscribe();\n    this._disabledChange.complete();\n\n    if (this._popupRef) {\n      this._popupRef.dispose();\n    }\n  }\n\n  /** Selects the given date */\n  _select(date: D): void {\n    const oldValue = this._selected;\n    this._selected = date;\n    if (!this._dateAdapter.sameDatetime(oldValue, this._selected)) {\n      // tslint:disable-next-line deprecation\n      this.selectedChanged.emit(date);\n    }\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   */\n  _registerInput(input: MatDatetimepickerInput<D>): void {\n    if (this._datepickerInput) {\n      throw Error(\"A MatDatepicker can only be associated with a single input.\");\n    }\n    this._datepickerInput = input;\n    this._inputSubscription =\n      this._datepickerInput._valueChange.subscribe((value: D | null) => this._selected = value);\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this.opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput) {\n      throw Error(\"Attempted to open an MatDatepicker with no associated input.\");\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this.opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this.opened) {\n      return;\n    }\n    if (this._popupRef && this._popupRef.hasAttached()) {\n      this._popupRef.detach();\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n    if (this._calendarPortal && this._calendarPortal.isAttached) {\n      this._calendarPortal.detach();\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this.opened) {\n        this.opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === \"function\") {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    this._dialogRef = this._dialog.open(MatDatetimepickerContent, {\n      direction: this._dir ? this._dir.value : \"ltr\",\n      viewContainerRef: this._viewContainerRef,\n      panelClass: \"mat-datetimepicker-dialog\"\n    });\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._dialogRef.componentInstance.datetimepicker = this;\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    if (!this._calendarPortal) {\n      this._calendarPortal = new ComponentPortal<MatDatetimepickerContent<D>>(MatDatetimepickerContent, this._viewContainerRef);\n    }\n\n    if (!this._popupRef) {\n      this._createPopup();\n    }\n\n    if (!this._popupRef.hasAttached()) {\n      const componentRef: ComponentRef<MatDatetimepickerContent<D>> =\n        this._popupRef.attach(this._calendarPortal);\n      componentRef.instance.datetimepicker = this;\n\n      // Update the position once the calendar has rendered.\n      this._ngZone.onStable.asObservable().pipe(first()).subscribe(() => {\n        this._popupRef.updatePosition();\n      });\n    }\n\n    this._popupRef.backdropClick().subscribe(() => this.close());\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._createPopupPositionStrategy(),\n      hasBackdrop: true,\n      backdropClass: \"mat-overlay-transparent-backdrop\",\n      direction: this._dir ? this._dir.value : \"ltr\",\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: \"mat-datetimepicker-popup\"\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n  }\n\n  /** Create the popup PositionStrategy. */\n  private _createPopupPositionStrategy(): PositionStrategy {\n    return this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn(\".mat-datetimepicker-content\")\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition()\n      .withPositions([\n        {\n          originX: \"start\",\n          originY: \"bottom\",\n          overlayX: \"start\",\n          overlayY: \"top\"\n        },\n        {\n          originX: \"start\",\n          originY: \"top\",\n          overlayX: \"start\",\n          overlayY: \"bottom\"\n        },\n        {\n          originX: \"end\",\n          originY: \"bottom\",\n          overlayX: \"end\",\n          overlayY: \"top\"\n        },\n        {\n          originX: \"end\",\n          originY: \"top\",\n          overlayX: \"end\",\n          overlayY: \"bottom\"\n        }\n      ]);\n  }\n}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport { DOWN_ARROW } from \"@angular/cdk/keycodes\";\nimport {\n  AfterContentInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output\n} from \"@angular/core\";\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n  Validators\n} from \"@angular/forms\";\nimport { MAT_INPUT_VALUE_ACCESSOR } from \"@angular/material\";\nimport { MatFormField } from \"@angular/material/form-field\";\nimport { Subscription } from \"rxjs\";\nimport { DatetimeAdapter } from \"../adapter/datetime-adapter\";\nimport {\n  MAT_DATETIME_FORMATS,\n  MatDatetimeFormats\n} from \"../adapter/datetime-formats\";\nimport { MatDatetimepicker } from \"./datetimepicker\";\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\nimport { MatDatetimepickerFilterType } from \"./datetimepicker-filtertype\";\n\n// tslint:disable no-use-before-declare\n\nexport const MAT_DATETIMEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatetimepickerInput),\n  multi: true\n};\n\nexport const MAT_DATETIMEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatetimepickerInput),\n  multi: true\n};\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatetimepickerInputEvent<D> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(public target: MatDatetimepickerInput<D>, public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: \"input[matDatetimepicker]\",\n  providers: [\n    MAT_DATETIMEPICKER_VALUE_ACCESSOR,\n    MAT_DATETIMEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatetimepickerInput},\n  ],\n  host: {\n    \"[attr.aria-haspopup]\": \"true\",\n    \"[attr.aria-owns]\": \"(_datepicker?.opened && _datepicker.id) || null\",\n    \"[attr.min]\": \"min ? _dateAdapter.toIso8601(min) : null\",\n    \"[attr.max]\": \"max ? _dateAdapter.toIso8601(max) : null\",\n    \"[disabled]\": \"disabled\",\n    \"(focus)\": \"_datepicker._handleFocus()\",\n    \"(input)\": \"_onInput($event.target.value)\",\n    \"(change)\": \"_onChange()\",\n    \"(blur)\": \"_onBlur()\",\n    \"(keydown)\": \"_onKeydown($event)\"\n  },\n  exportAs: \"matDatepickerInput\"\n})\nexport class MatDatetimepickerInput<D> implements AfterContentInit, ControlValueAccessor, OnDestroy,\n  Validator {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatetimepicker(value: MatDatetimepicker<D>) {\n    this.registerDatepicker(value);\n  }\n\n  _datepicker: MatDatetimepicker<D>;\n\n  private registerDatepicker(value: MatDatetimepicker<D>) {\n    if (value) {\n      this._datepicker = value;\n      this._datepicker._registerInput(this);\n    }\n  }\n\n  @Input() set matDatepickerFilter(filter: (date: D | null, type: MatDatetimepickerFilterType) => boolean) {\n    this._dateFilter = filter;\n    this._validatorOnChange();\n  }\n\n  _dateFilter: (date: D | null, type: MatDatetimepickerFilterType) => boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null {\n    return this._value;\n  }\n\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = !value || this._dateAdapter.isValid(value);\n    value = this._dateAdapter.getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._value = value;\n    this._formatValue(value);\n\n    // use timeout to ensure the datetimepicker is instantiated and we get the correct format\n    setTimeout(() => {\n      if (!this._dateAdapter.sameDatetime(oldDate, value)) {\n        this._valueChange.emit(value);\n      }\n    });\n  }\n\n  private getDisplayFormat() {\n    switch (this._datepicker.type) {\n      case \"date\":\n        return this._dateFormats.display.dateInput;\n      case \"datetime\":\n        return this._dateFormats.display.datetimeInput;\n      case \"time\":\n        return this._dateFormats.display.timeInput;\n      case \"month\":\n        return this._dateFormats.display.monthInput;\n    }\n  }\n\n  private getParseFormat() {\n    let parseFormat;\n\n    switch (this._datepicker.type) {\n      case \"date\":\n        parseFormat = this._dateFormats.parse.dateInput;\n        break;\n      case \"datetime\":\n        parseFormat = this._dateFormats.parse.datetimeInput;\n        break;\n      case \"time\":\n        parseFormat = this._dateFormats.parse.timeInput;\n        break;\n      case \"month\":\n        parseFormat = this._dateFormats.parse.monthInput;\n        break;\n    }\n    if (!parseFormat) {\n      parseFormat = this._dateFormats.parse.dateInput;\n    }\n\n    return parseFormat;\n  }\n\n  private _value: D | null;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null {\n    return this._min;\n  }\n\n  set min(value: D | null) {\n    this._min = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null {\n    return this._max;\n  }\n\n  set max(value: D | null) {\n    this._max = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    this._validatorOnChange();\n  }\n\n  private _max: D | null;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled() {\n    return !!this._disabled;\n  }\n\n  set disabled(value: any) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this._disabledChange.emit(newValue);\n    }\n  }\n\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() dateChange = new EventEmitter<MatDatetimepickerInputEvent<D>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() dateInput = new EventEmitter<MatDatetimepickerInputEvent<D>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the disabled state has changed */\n  _disabledChange = new EventEmitter<boolean>();\n\n  _onTouched = () => {\n  }\n\n  private _cvaOnChange: (value: any) => void = () => {\n  }\n\n  private _validatorOnChange = () => {\n  }\n\n  private _datepickerSubscription = Subscription.EMPTY;\n\n  private _localeSubscription = Subscription.EMPTY;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n      null : {\"matDatepickerParse\": {\"text\": this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.min || !controlValue ||\n      this._dateAdapter.compareDatetime(this.min, controlValue) <= 0) ?\n      null : {\"matDatepickerMin\": {\"min\": this.min, \"actual\": controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return (!this.max || !controlValue ||\n      this._dateAdapter.compareDatetime(this.max, controlValue) >= 0) ?\n      null : {\"matDatepickerMax\": {\"max\": this.max, \"actual\": controlValue}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    return !this._dateFilter || !controlValue || this._dateFilter(controlValue, MatDatetimepickerFilterType.DATE) ?\n      null : {\"matDatepickerFilter\": true};\n  }\n\n  /** The combined form control validator for this input. */\n  private _validator: ValidatorFn | null =\n    Validators.compose(\n      [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator]);\n\n  /** Whether the last value set on the input was valid. */\n  private _lastValueValid = false;\n\n  constructor(private _elementRef: ElementRef,\n              @Optional() public _dateAdapter: DatetimeAdapter<D>,\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats,\n              @Optional() private _formField: MatFormField) {\n    if (!this._dateAdapter) {\n      throw createMissingDateImplError(\"DatetimeAdapter\");\n    }\n    if (!this._dateFormats) {\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngAfterContentInit() {\n    if (this._datepicker) {\n      // tslint:disable-next-line deprecation\n      this._datepickerSubscription = this._datepicker.selectedChanged.subscribe((selected: D) => {\n          this.value = selected;\n          this._cvaOnChange(selected);\n          this._onTouched();\n          this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n          this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    this._datepickerSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this._disabledChange.complete();\n  }\n\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor\n  setDisabledState(disabled: boolean): void {\n    this.disabled = disabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    // tslint:disable-next-line:deprecation\n    if (event.altKey && event.keyCode === DOWN_ARROW) {\n      this._datepicker.open();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    let date = this._dateAdapter.parse(value, this.getParseFormat());\n    this._lastValueValid = !date || this._dateAdapter.isValid(date);\n    date = this._dateAdapter.getValidDateOrNull(date);\n    this._value = date;\n    this._cvaOnChange(date);\n    this._valueChange.emit(date);\n    this.dateInput.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatetimepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n   /** Formats a value and sets it on the input element. */\n   private _formatValue(value: D | null) {\n     this._elementRef.nativeElement.value =\n       value ? this._dateAdapter.format(value, this.getDisplayFormat()) : \"\";\n   }\n}\n","import { coerceBooleanProperty } from \"@angular/cdk/coercion\";\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { MatDatepickerIntl } from \"@angular/material\";\nimport { merge, of as observableOf, Subscription } from \"rxjs\";\nimport { MatDatetimepicker } from \"./datetimepicker\";\n\n@Component({\n  selector: \"mat-datetimepicker-toggle\",\n  templateUrl: \"datetimepicker-toggle.html\",\n  host: {\n    \"class\": \"mat-datetimepicker-toggle\"\n  },\n  exportAs: \"matDatetimepickerToggle\",\n  encapsulation: ViewEncapsulation.None,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatDatetimepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  // tslint:disable-next-line:no-input-rename\n  @Input(\"for\") datetimepicker: MatDatetimepicker<D>;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined ? this.datetimepicker.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.datepicker) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datetimepicker && !this.disabled) {\n      this.datetimepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerDisabled = this.datetimepicker ? this.datetimepicker._disabledChange : observableOf();\n    const inputDisabled = this.datetimepicker && this.datetimepicker._datepickerInput ?\n        this.datetimepicker._datepickerInput._disabledChange : observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(this._intl.changes, datepickerDisabled, inputDisabled)\n        .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n}\n","/* tslint:disable */\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport {\n  MAT_DATETIME_FORMATS,\n  MatDatetimeFormats\n} from \"../adapter/datetime-formats\";\nimport {\n  DatetimeAdapter\n} from \"../adapter/datetime-adapter\";\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\nimport { slideCalendar } from \"./datetimepicker-animations\";\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\n\nconst DAYS_PER_WEEK = 7;\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: \"mat-datetimepicker-month-view\",\n  templateUrl: \"month-view.html\",\n  animations: [slideCalendar],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatDatetimepickerMonthView<D> implements AfterContentInit {\n\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\n\n  @Output() _userSelection = new EventEmitter<void>();\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D {\n    return this._activeDate;\n  }\n\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    this._activeDate = value || this._adapter.today();\n    if (oldActiveDate && this._activeDate &&\n      !this._adapter.sameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n      if (this._adapter.isInNextMonth(oldActiveDate, this._activeDate)) {\n        this.calendarState(\"right\");\n      } else {\n        this.calendarState(\"left\");\n      }\n    }\n  }\n\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D {\n    return this._selected;\n  }\n\n  set selected(value: D) {\n    this._selected = value;\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n  }\n\n  private _selected: D;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new date is selected. */\n  @Output() selectedChange = new EventEmitter<D>();\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatDatetimepickerCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /**\n   * The date of the month that the currently selected Date falls on.\n   * Null if the currently selected Date is in another month.\n   */\n  _selectedDate: number;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number;\n\n  /** The names of the weekdays. */\n  _weekdays: { long: string, narrow: string }[];\n\n  _calendarState: string;\n\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\n    if (!this._adapter) {\n      throw createMissingDateImplError(\"DatetimeAdapter\");\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\n    }\n\n    const firstDayOfWeek = this._adapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._adapter.getDayOfWeekNames(\"narrow\");\n    const longWeekdays = this._adapter.getDayOfWeekNames(\"long\");\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n      return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n\n    this._activeDate = this._adapter.today();\n  }\n\n  ngAfterContentInit(): void {\n    this._init();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(date: number) {\n    this.selectedChange.emit(this._adapter.createDatetime(\n      this._adapter.getYear(this.activeDate), this._adapter.getMonth(this.activeDate),\n      date, this._adapter.getHour(this.activeDate),\n      this._adapter.getMinute(this.activeDate)));\n    if (this.type === \"date\") {\n      this._userSelection.emit();\n    }\n  }\n\n  /** Initializes this month view. */\n  private _init() {\n    this._selectedDate = this._getDateInCurrentMonth(this.selected);\n    this._todayDate = this._getDateInCurrentMonth(this._adapter.today());\n\n    let firstOfMonth = this._adapter.createDatetime(this._adapter.getYear(this.activeDate),\n      this._adapter.getMonth(this.activeDate), 1,\n      this._adapter.getHour(this.activeDate),\n      this._adapter.getMinute(this.activeDate));\n    this._firstWeekOffset =\n      (DAYS_PER_WEEK + this._adapter.getDayOfWeek(firstOfMonth) -\n        this._adapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._createWeekCells();\n  }\n\n  /** Creates MdCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    let daysInMonth = this._adapter.getNumDaysInMonth(this.activeDate);\n    let dateNames = this._adapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++ , cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      let date = this._adapter.createDatetime(\n        this._adapter.getYear(this.activeDate),\n        this._adapter.getMonth(this.activeDate), i + 1,\n        this._adapter.getHour(this.activeDate),\n        this._adapter.getMinute(this.activeDate));\n      let enabled = !this.dateFilter ||\n        this.dateFilter(date);\n      let ariaLabel = this._adapter.format(date, this._dateFormats.display.dateA11yLabel);\n      this._weeks[this._weeks.length - 1]\n        .push(new MatDatetimepickerCalendarCell(i + 1, dateNames[i], ariaLabel, enabled));\n    }\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D): number {\n    return this._adapter.sameMonthAndYear(date, this.activeDate) ?\n      this._adapter.getDate(date) : null;\n  }\n\n  private calendarState(direction: string): void {\n    this._calendarState = direction;\n  }\n\n  _calendarStateDone() {\n    this._calendarState = \"\";\n  }\n\n}\n","/* tslint:disable */\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation\n} from \"@angular/core\";\nimport { createMissingDateImplError } from \"./datetimepicker-errors\";\nimport { MatDatetimepickerCalendarCell } from \"./calendar-body\";\nimport { slideCalendar } from \"./datetimepicker-animations\";\nimport {\n  MAT_DATETIME_FORMATS,\n  MatDatetimeFormats\n} from \"../adapter/datetime-formats\";\nimport {\n  DatetimeAdapter\n} from \"../adapter/datetime-adapter\";\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: \"mat-datetimepicker-year-view\",\n  templateUrl: \"year-view.html\",\n  animations: [slideCalendar],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatDatetimepickerYearView<D> implements AfterContentInit {\n\n  @Output() _userSelection = new EventEmitter<void>();\n\n  @Input() type: \"date\" | \"time\" | \"month\" | \"datetime\" = \"date\";\n\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D {\n    return this._activeDate;\n  }\n\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    this._activeDate = value || this._adapter.today();\n    if (oldActiveDate && this._activeDate &&\n      !this._adapter.sameYear(oldActiveDate, this._activeDate)) {\n      this._init();\n      // if (oldActiveDate < this._activeDate) {\n      //  this.calendarState('right');\n      // } else {\n      //  this.calendarState('left');\n      // }\n    }\n  }\n\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): D {\n    return this._selected;\n  }\n\n  set selected(value: D) {\n    this._selected = value;\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n  }\n\n  private _selected: D;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Emits when a new month is selected. */\n  @Output() selectedChange = new EventEmitter<D>();\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatDatetimepickerCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number;\n\n  _calendarState: string;\n\n  constructor(@Optional() public _adapter: DatetimeAdapter<D>,\n              @Optional() @Inject(MAT_DATETIME_FORMATS) private _dateFormats: MatDatetimeFormats) {\n    if (!this._adapter) {\n      throw createMissingDateImplError(\"DatetimeAdapter\");\n    }\n\n    if (!this._dateFormats) {\n      throw createMissingDateImplError(\"MAT_DATETIME_FORMATS\");\n    }\n\n    this._activeDate = this._adapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._init();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(month: number) {\n    this.selectedChange.emit(this._adapter.createDatetime(\n      this._adapter.getYear(this.activeDate), month,\n      this._adapter.getDate(this.activeDate),\n      this._adapter.getHour(this.activeDate),\n      this._adapter.getMinute(this.activeDate)));\n    if (this.type === \"month\") {\n      this._userSelection.emit();\n    }\n  }\n\n  /** Initializes this month view. */\n  private _init() {\n    this._selectedMonth = this._getMonthInCurrentYear(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._adapter.today());\n    this._yearLabel = this._adapter.getYearName(this.activeDate);\n\n    let monthNames = this._adapter.getMonthNames(\"short\");\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3, 4], [5, 6, 7, 8, 9, 10, 11]].map(row => row.map(\n      month => this._createCellForMonth(month, monthNames[month])));\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D) {\n    return this._adapter.sameYear(date, this.activeDate) ?\n      this._adapter.getMonth(date) : null;\n  }\n\n  /** Creates an MdCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    let ariaLabel = this._adapter.format(\n      this._adapter.createDatetime(this._adapter.getYear(this.activeDate), month, 1,\n        this._adapter.getHour(this.activeDate),\n        this._adapter.getMinute(this.activeDate)),\n      this._dateFormats.display.monthYearA11yLabel);\n    return new MatDatetimepickerCalendarCell(\n      month, monthName.toLocaleUpperCase(), ariaLabel, this._isMonthEnabled(month));\n  }\n\n  /** Whether the given month is enabled. */\n  private _isMonthEnabled(month: number) {\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    let firstOfMonth = this._adapter.createDatetime(\n      this._adapter.getYear(this.activeDate), month, 1,\n      this._adapter.getHour(this.activeDate),\n      this._adapter.getMinute(this.activeDate));\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._adapter.getMonth(date) == month;\n         date = this._adapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // private calendarState(direction: string): void {\n  //   this._calendarState = direction;\n  // }\n\n  _calendarStateDone() {\n    this._calendarState = \"\";\n  }\n}\n","import { A11yModule } from \"@angular/cdk/a11y\";\nimport { OverlayModule } from \"@angular/cdk/overlay\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n  MatButtonModule,\n  MatDialogModule,\n  MatIconModule\n} from \"@angular/material\";\nimport { MatDatetimepickerCalendar } from \"./calendar\";\nimport { MatDatetimepickerCalendarBody } from \"./calendar-body\";\nimport { MatDatetimepickerClock } from \"./clock\";\nimport {\n  MatDatetimepicker,\n  MatDatetimepickerContent\n} from \"./datetimepicker\";\nimport { MatDatetimepickerInput } from \"./datetimepicker-input\";\nimport { MatDatetimepickerToggle } from \"./datetimepicker-toggle\";\nimport { MatDatetimepickerMonthView } from \"./month-view\";\nimport { MatDatetimepickerYearView } from \"./year-view\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    MatIconModule,\n    OverlayModule,\n    A11yModule\n  ],\n  entryComponents: [\n    MatDatetimepickerContent\n  ],\n  declarations: [\n    MatDatetimepickerCalendar,\n    MatDatetimepickerCalendarBody,\n    MatDatetimepickerClock,\n    MatDatetimepicker,\n    MatDatetimepickerToggle,\n    MatDatetimepickerInput,\n    MatDatetimepickerContent,\n    MatDatetimepickerMonthView,\n    MatDatetimepickerYearView\n  ],\n  exports: [\n    MatDatetimepickerCalendar,\n    MatDatetimepickerCalendarBody,\n    MatDatetimepickerClock,\n    MatDatetimepicker,\n    MatDatetimepickerToggle,\n    MatDatetimepickerInput,\n    MatDatetimepickerContent,\n    MatDatetimepickerMonthView,\n    MatDatetimepickerYearView\n  ]\n})\nexport class MatDatetimepickerModule {\n}\n"],"names":["tslib_1.__extends","first","style","DateAdapter","trigger","observableOf"],"mappings":"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"}
