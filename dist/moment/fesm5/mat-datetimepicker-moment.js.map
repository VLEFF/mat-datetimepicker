{"version":3,"file":"mat-datetimepicker-moment.js.map","sources":["ng://@mat-datetimepicker/moment/adapter/moment-datetime-adapter.ts","ng://@mat-datetimepicker/moment/adapter/moment-datetime-formats.ts","ng://@mat-datetimepicker/moment/adapter/index.ts"],"sourcesContent":["import {\n  Inject,\n  Injectable,\n  Optional\n} from \"@angular/core\";\nimport {\n  DateAdapter,\n  MAT_DATE_LOCALE\n} from \"@angular/material\";\nimport { DatetimeAdapter } from \"@mat-datetimepicker/core\";\n\nimport * as moment_ from \"moment\";\nimport { Moment } from \"moment\";\nconst moment = moment_;\n\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n\n@Injectable()\nexport class MomentDatetimeAdapter extends DatetimeAdapter<Moment> {\n\n  private _localeData: {\n    firstDayOfWeek: number,\n    longMonths: string[],\n    shortMonths: string[],\n    dates: string[],\n    hours: string[],\n    minutes: string[],\n    longDaysOfWeek: string[],\n    shortDaysOfWeek: string[],\n    narrowDaysOfWeek: string[]\n  };\n\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, _delegate: DateAdapter<Moment>) {\n    super(_delegate);\n    this.setLocale(matDateLocale || moment.locale());\n  }\n\n  setLocale(locale: string) {\n    super.setLocale(locale);\n\n    const momentLocaleData = moment.localeData(locale);\n    this._localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      longMonths: momentLocaleData.months(),\n      shortMonths: momentLocaleData.monthsShort(),\n      dates: range(31, (i) => super.createDate(2017, 0, i + 1).format(\"D\")),\n      hours: range(24, (i) => this.createDatetime(2017, 0, 1, i, 0).format(\"H\")),\n      minutes: range(60, (i) => this.createDatetime(2017, 0, 1, 1, i).format(\"m\")),\n      longDaysOfWeek: momentLocaleData.weekdays(),\n      shortDaysOfWeek: momentLocaleData.weekdaysShort(),\n      narrowDaysOfWeek: momentLocaleData.weekdaysMin()\n    };\n  }\n\n  getHour(date: Moment): number {\n    return super.clone(date).hour();\n  }\n\n  getMinute(date: Moment): number {\n    return super.clone(date).minute();\n  }\n\n  isInNextMonth(startDate: Moment, endDate: Moment): boolean {\n    const nextMonth = this.getDateInNextMonth(startDate);\n    return super.sameMonthAndYear(nextMonth, endDate);\n  }\n\n  createDatetime(year: number, month: number, date: number, hour: number, minute: number): Moment {\n    // Check for invalid month and date (except upper bound on date which we have to check after\n    // creating the Date).\n    if (month < 0 || month > 11) {\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n    }\n\n    if (date < 1) {\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n    }\n\n    if (hour < 0 || hour > 23) {\n      throw Error(`Invalid hour \"${hour}\". Hour has to be between 0 and 23.`);\n    }\n\n    if (minute < 0 || minute > 59) {\n      throw Error(`Invalid minute \"${minute}\". Minute has to be between 0 and 59.`);\n    }\n\n    // const result = moment({year, month, date, hour, minute}).locale(this.locale);\n    const result = moment({year, month, date, hour, minute});\n\n    // If the result isn't valid, the date must have been out of bounds for this month.\n    if (!result.isValid()) {\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n    }\n\n    return result;\n  }\n\n  private getDateInNextMonth(date: Moment) {\n    return super.clone(date).date(1).add({month: 1});\n  }\n\n  getFirstDateOfMonth(date: Moment): Moment {\n    return super.clone(date).startOf(\"month\");\n  }\n\n  getHourNames(): string[] {\n    return this._localeData.hours;\n  }\n\n  getMinuteNames(): string[] {\n    return this._localeData.minutes;\n  }\n\n  addCalendarHours(date: Moment, hours: number): Moment {\n    return super.clone(date).add({hours});\n  }\n\n  addCalendarMinutes(date: Moment, minutes: number): Moment {\n    return super.clone(date).add({minutes});\n  }\n\n  deserialize(value: any): Moment | null {\n     return this._delegate.deserialize(value);\n   }\n}\n","import { MatDatetimeFormats } from \"@mat-datetimepicker/core\";\n\nexport const MAT_MOMENT_DATETIME_FORMATS: MatDatetimeFormats = {\n  parse: {\n    dateInput: \"L\",\n    monthInput: \"MMMM\",\n    timeInput: \"LT\",\n    datetimeInput: \"L LT\"\n  },\n  display: {\n    dateInput: \"L\",\n    monthInput: \"MMMM\",\n    datetimeInput: \"L LT\",\n    timeInput: \"LT\",\n    monthYearLabel: \"MMM YYYY\",\n    dateA11yLabel: \"LL\",\n    monthYearA11yLabel: \"MMMM YYYY\",\n    popupHeaderDateLabel: \"ddd, DD MMM\"\n  }\n};\n","import { NgModule } from \"@angular/core\";\nimport {\n  MatMomentDateModule,\n  MomentDateModule\n} from \"@angular/material-moment-adapter\";\nimport {\n  DatetimeAdapter,\n  MAT_DATETIME_FORMATS\n} from \"@mat-datetimepicker/core\";\nimport { MomentDatetimeAdapter } from \"./moment-datetime-adapter\";\nimport { MAT_MOMENT_DATETIME_FORMATS } from \"./moment-datetime-formats\";\n\nexport * from \"./moment-datetime-adapter\";\nexport * from \"./moment-datetime-formats\";\n\n@NgModule({\n  imports: [MomentDateModule],\n  providers: [\n    {\n      provide: DatetimeAdapter,\n      useClass: MomentDatetimeAdapter\n    }\n  ]\n})\nexport class MomentDatetimeModule {\n}\n\n@NgModule({\n  imports: [MomentDatetimeModule, MatMomentDateModule],\n  providers: [{provide: MAT_DATETIME_FORMATS, useValue: MAT_MOMENT_DATETIME_FORMATS}]\n})\nexport class MatMomentDatetimeModule {\n}\n"],"names":["tslib_1.__extends"],"mappings":"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"}
